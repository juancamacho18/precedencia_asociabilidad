# Generated from Modificado.g4 by ANTLR 4.13.2
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,18,104,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,1,0,1,0,1,0,1,0,
        1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,2,1,2,1,3,1,3,1,3,1,4,1,4,1,4,
        1,4,1,5,1,5,1,6,1,6,1,6,1,6,1,7,1,7,1,7,1,7,1,8,1,8,1,8,1,8,1,9,
        1,9,1,10,1,10,1,11,1,11,1,12,1,12,1,13,1,13,1,14,4,14,84,8,14,11,
        14,12,14,85,1,15,4,15,89,8,15,11,15,12,15,90,1,16,4,16,94,8,16,11,
        16,12,16,95,1,17,4,17,99,8,17,11,17,12,17,100,1,17,1,17,0,0,18,1,
        1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,10,21,11,23,12,25,13,27,
        14,29,15,31,16,33,17,35,18,1,0,17,2,0,77,77,109,109,2,0,79,79,111,
        111,2,0,68,68,100,100,2,0,83,83,115,115,2,0,81,81,113,113,2,0,82,
        82,114,114,2,0,84,84,116,116,2,0,76,76,108,108,2,0,78,78,110,110,
        2,0,71,71,103,103,2,0,73,73,105,105,2,0,67,67,99,99,2,0,65,65,97,
        97,2,0,65,90,97,122,1,0,48,57,2,0,10,10,13,13,2,0,9,9,32,32,107,
        0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,
        1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,
        1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,
        1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,1,37,1,0,0,0,3,43,1,0,0,0,5,49,
        1,0,0,0,7,51,1,0,0,0,9,54,1,0,0,0,11,58,1,0,0,0,13,60,1,0,0,0,15,
        64,1,0,0,0,17,68,1,0,0,0,19,72,1,0,0,0,21,74,1,0,0,0,23,76,1,0,0,
        0,25,78,1,0,0,0,27,80,1,0,0,0,29,83,1,0,0,0,31,88,1,0,0,0,33,93,
        1,0,0,0,35,98,1,0,0,0,37,38,7,0,0,0,38,39,7,1,0,0,39,40,7,2,0,0,
        40,41,7,1,0,0,41,42,5,61,0,0,42,2,1,0,0,0,43,44,7,3,0,0,44,45,7,
        4,0,0,45,46,7,5,0,0,46,47,7,6,0,0,47,48,5,40,0,0,48,4,1,0,0,0,49,
        50,5,41,0,0,50,6,1,0,0,0,51,52,7,7,0,0,52,53,7,8,0,0,53,8,1,0,0,
        0,54,55,7,7,0,0,55,56,7,1,0,0,56,57,7,9,0,0,57,10,1,0,0,0,58,59,
        5,40,0,0,59,12,1,0,0,0,60,61,7,3,0,0,61,62,7,10,0,0,62,63,7,8,0,
        0,63,14,1,0,0,0,64,65,7,11,0,0,65,66,7,1,0,0,66,67,7,3,0,0,67,16,
        1,0,0,0,68,69,7,6,0,0,69,70,7,12,0,0,70,71,7,8,0,0,71,18,1,0,0,0,
        72,73,5,33,0,0,73,20,1,0,0,0,74,75,5,42,0,0,75,22,1,0,0,0,76,77,
        5,47,0,0,77,24,1,0,0,0,78,79,5,43,0,0,79,26,1,0,0,0,80,81,5,45,0,
        0,81,28,1,0,0,0,82,84,7,13,0,0,83,82,1,0,0,0,84,85,1,0,0,0,85,83,
        1,0,0,0,85,86,1,0,0,0,86,30,1,0,0,0,87,89,7,14,0,0,88,87,1,0,0,0,
        89,90,1,0,0,0,90,88,1,0,0,0,90,91,1,0,0,0,91,32,1,0,0,0,92,94,7,
        15,0,0,93,92,1,0,0,0,94,95,1,0,0,0,95,93,1,0,0,0,95,96,1,0,0,0,96,
        34,1,0,0,0,97,99,7,16,0,0,98,97,1,0,0,0,99,100,1,0,0,0,100,98,1,
        0,0,0,100,101,1,0,0,0,101,102,1,0,0,0,102,103,6,17,0,0,103,36,1,
        0,0,0,5,0,85,90,95,100,1,6,0,0
    ]

class ModificadoLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    MUL = 11
    DIV = 12
    ADD = 13
    SUB = 14
    ID = 15
    INT = 16
    NEWLINE = 17
    WS = 18

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'modo='", "'Sqrt('", "')'", "'ln'", "'log'", "'('", "'sin'", 
            "'cos'", "'tan'", "'!'", "'*'", "'/'", "'+'", "'-'" ]

    symbolicNames = [ "<INVALID>",
            "MUL", "DIV", "ADD", "SUB", "ID", "INT", "NEWLINE", "WS" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "MUL", "DIV", "ADD", "SUB", "ID", 
                  "INT", "NEWLINE", "WS" ]

    grammarFileName = "Modificado.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.2")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


